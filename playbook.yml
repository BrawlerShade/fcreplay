---
- name: Setup fcrecorder machine
  hosts: all
  become: True
  tasks:
    - name: Install rpmfusion repos
      yum:
        name: "{{packages}}"
        disable_gpg_check: True
      vars:
        packages:
          - https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-{{ ansible_distribution_version }}.noarch.rpm 
          - https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-{{ ansible_distribution_version }}.noarch.rpm

    - name: Install packages
      yum:
        name: "{{packages}}"
        disable_gpg_check: True
      vars:
        packages:
          - alsa-utils
          - cabextract
          - chkconfig
          - cmake
          - firewalld
          - ffmpeg
          - gcc
          - git
          - i3
          - jq
          - libpq-devel
          - mencoder
          - maim
          - p7zip
          - p7zip-plugins
          - pavucontrol
          - portaudio
          - portaudio-devel
          - pulseaudio
          - pulseaudio-libs
          - python3
          - python3-devel
          - python3-tkinter
          - rsync
          - tmux
          - unzip
          - vim
          - wget
          - wine.i686
          - winetricks
          - x11vnc
          - xinit
          - xorg-x11-drv-dummy
          - xterm

    - name: Install qemu-guest-agent for proxmox
      yum:
        name: "qemu-guest-agent"
        disable_gpg_check: true
      when: lookup('env', 'FCREPLAY_PROXMOX') | bool

    - name: Enable qemu-guest-agent
      service:
        name: qemu-guest-agent
        state: stopped
        enabled: yes

    - name: install the 'Development tools' package group
      yum:
        name: "@Development tools"
        disable_gpg_check: True
        state: present

    - name: Disable cockpit
      yum:
        name: "cockpit"
        disable_gpg_check: True
        state: absent

    - name: Enable firewalld
      service:
        name: firewalld
        state: started
        enabled: yes

    - name: VNC Rules
      ansible.posix.firewalld:
        port: 5900/tcp
        immediate: yes
        permanent: yes
        state: enabled

    - name: Create group
      group:
        name: fcrecorder
        state: present

    - name: Create user
      user:
        name: fcrecorder
        comment: FC Recorder
        create_home: True
        home: /home/fcrecorder
        shell: /bin/bash
        group: fcrecorder
        groups: pulse,pulse-access,input

    - name: Clone fcreplay
      git:
        repo: https://github.com/glisignoli/fcreplay.git
        dest: /home/fcrecorder/fcreplay_install
        version: "{{ lookup('env', 'FCREPLAY_BRANCH') }}"
      become_user: fcrecorder
      become: True

    - name: Make install directory
      file:
        path: /home/fcrecorder/fcreplay
        state: directory
        mode: '0750'
      become_user: fcrecorder
      become: True

    - name: Create venv
      command: python3 -m venv ./venv
      args:
        chdir: /home/fcrecorder/fcreplay
      become_user: fcrecorder
      become: True

    - name: Update setuptools and pip
      shell: |
        cd /home/fcrecorder/fcreplay
        source ./venv/bin/activate
        pip install --upgrade setuptools
        pip install --upgrade pip
      become_user: fcrecorder
      become: True

    - name: Install fcreplay
      shell: |
        cd /home/fcrecorder/fcreplay
        source ./venv/bin/activate
        cd /home/fcrecorder/fcreplay_install
        python setup.py install
      become_user: fcrecorder
      become: True

    - name: Clone youtube-upload
      git:
        repo: https://github.com/tokland/youtube-upload.git
        dest: /home/fcrecorder/youtube-upload
      become_user: fcrecorder
      become: True

    - name: Install youtube-upload
      shell: |
        cd /home/fcrecorder/fcreplay
        source ./venv/bin/activate
        pip install --upgrade google-api-python-client oauth2client progressbar2 scikit-build
        cd /home/fcrecorder/youtube-upload
        python setup.py install
      become_user: fcrecorder
      become: True

    - name: Copy config.json
      copy:
        src: "{{ lookup('env', 'FCREPLAY_CONFIG') }}"
        dest: /home/fcrecorder/fcreplay/config.json
        owner: fcrecorder
        group: fcrecorder
        mode: '0600'
      ignore_errors: yes

    - name: Copy description append
      copy:
        src: ./description_append.txt
        dest: /home/fcrecorder/fcreplay/description_append.txt
        owner: fcrecorder
        group: fcrecorder
        mode: '0640'
      ignore_errors: yes

    - name: Copy youtube upload credentials
      copy:
        src: ./.youtube-upload-credentials.json
        dest: /home/fcrecorder/.youtube-upload-credentials.json
        owner: fcrecorder
        group: fcrecorder
        mode: '0600'
      ignore_errors: yes

    - name: Copy google api client secrets
      copy:
        src: ./.client_secrets.json
        dest: /home/fcrecorder/.client_secrets.json
        owner: fcrecorder
        group: fcrecorder
        mode: '0600'
      ignore_errors: yes

    - name: Copy archive.org secrets
      copy:
        src: ./.ia
        dest: /home/fcrecorder/.ia
        owner: fcrecorder
        group: fcrecorder
        mode: '0600'
      ignore_errors: yes

    - name: Copy xorg.conf
      copy:
        src: ./files/xorg.conf
        dest: /etc/X11/
        owner: root
        group: root
        mode: '0644'

    - name: Copy Xwrapper
      copy:
        src: ./files/Xwrapper.config
        dest: /etc/X11/
        owner: root
        group: root
        mode: '0644'

    - name: Create xinitrc
      copy:
        content: exec i3
        dest: /home/fcrecorder/.xinitrc
        owner: fcrecorder
        group: fcrecorder
        mode: '0640'

    - name: Create i3 config directory
      command: mkdir -p /home/fcrecorder/.config/i3
      become_user: fcrecorder
      become: True

    - name: Copy i3 config
      copy:
        src: ./files/i3_config
        dest: /home/fcrecorder/.config/i3/config
        owner: fcrecorder
        group: fcrecorder
        mode: '0664'

    - name: Copy the fcreplaylauncher script for proxmox
      copy:
        src: ./files/fcreplaylauncher-proxmox.sh
        dest: /usr/local/bin/fcreplaylauncher.sh
        owner: fcrecorder
        group: fcrecorder
        mode: '0750'
      when: lookup('env', 'FCREPLAY_AUTOSTART') | bool and lookup('env', 'FCREPLAY_PROXMOX') | bool

    - name: Copy the fcreplaylauncher script for google cloud
      copy:
        src: ./files/fcreplaylauncher-gcloud.sh
        dest: /usr/local/bin/fcreplaylauncher.sh
        owner: fcrecorder
        group: fcrecorder
        mode: '0750'
      when: lookup('env', 'FCREPLAY_AUTOSTART') | bool and lookup('env', 'FCREPLAY_GCLOUD') | bool

    - name: Copy the fcreplay shutdown script
      copy:
        src: ./files/fcreplayshutdown.sh
        dest: /usr/local/bin/fcreplayshutdown.sh
        owner: fcrecorder
        group: fcrecorder
        mode: '0750'
      when: lookup('env', 'FCREPLAY_AUTOSTART') | bool

    - name: Copy the startup service file
      copy:
        src: ./files/fcrecord.service
        dest: /usr/lib/systemd/system/fcrecord.service
        owner: root
        group: root
        mode: '0664'

    - name: Copy the startup file
      copy:
        src: ./files/startup.sh
        dest: /home/fcrecorder/startup.sh
        owner: fcrecorder
        group: fcrecorder
        mode: '0750'

    - name: Install google cloud logging config
      yum:
        name: google-fluentd-catch-all-config
        disable_gpg_check: True
        state: latest
      when: lookup('env', 'FCREPLAY_GCLOUD') | bool

    - name: Add google cloud fcreplay logging
      copy:
        src: ./files/google-cloud-fcreplay-looging.conf
        dest: /etc/google-fluentd/config.d/
        owner: root
        group: root
        mode: '0640'
      when: lookup('env', 'FCREPLAY_GCLOUD') | bool

    - name: Enable google cloud logging systemd service
      service:
        name: google-fluentd
        state: started
        enabled: yes
      when: lookup('env', 'FCREPLAY_GCLOUD') | bool

    - name: Autostart recording when FCREPLAY_AUTOSTART enabled
      replace:
        path: /home/fcrecorder/.config/i3/config
        regexp: '^# exec "xterm'
        replace: 'exec "xterm'
      become: True
      become_user: fcrecorder
      when: lookup('env', 'FCREPLAY_AUTOSTART') | bool

    - name: Create config directory
      file:
        path: /home/fcrecorder/.config
        state: directory
        mode: 0750
      become: True
      become_user: fcrecorder

    - name: Copy fightcade2
      synchronize:
        src: "{{ lookup('env', 'FC2_PATH') }}"
        dest: /home/fcrecorder/fcreplay/
      become: True
      become_user: fcrecorder
      ignore_errors: true

    - name: Fix FC2 permissions
      command: chown -R fcrecorder:fcrecorder /home/fcrecorder

    - name: Copy default config
      copy:
        src: ./files/fcadefbneo.default.ini
        dest: /home/fcrecorder/fcreplay/Fightcade/emulator/fbneo/config/
      become: True
      become_user: fcrecorder

    - name: Copy config
      copy:
        src: ./files/fcadefbneo.ini
        dest: /home/fcrecorder/fcreplay/Fightcade/emulator/fbneo/config/
      become: True
      become_user: fcrecorder

    - name: Enable fcrecord service
      service:
        name: fcrecord
        state: stopped
        enabled: true
      when: lookup('env', 'FCREPLAY_AUTOSTART') | bool

    - name: Make sure fcrecorder user can restart google-fluentd
      lineinfile:
        path: /etc/sudoers
        line: 'fcrecorder   ALL=NOPASSWD:/usr/bin/systemctl restart google-fluentd'
      when: lookup('env', 'FCREPLAY_GCLOUD') | bool

    - name: Make sure fcrecorder user can shutdown server
      lineinfile:
        path: /etc/sudoers
        line: 'fcrecorder   ALL=NOPASSWD:/usr/sbin/shutdown'

    - name: Disable makecache
      service:
        name: dnf-makecache.service
        state: stopped
        enabled: false

    - name: Disable mamkecache timer
      service:
        name: dnf-makecache.timer
        state: stopped
        enabled: false

    - name: Copy proxmox startup fix for cloud-init
      copy:
        src: ./files/proxmox_hostname_fix.sh
        dest: /var/lib/cloud/scripts/per-boot/proxmox_hostname_fix.sh
        mode: 0755
        owner: root
        group: root
      become: true
      when: lookup('env', 'FCREPLAY_PROXMOX') | bool

    - name: Fix startup for proxmox
      replace:
        path: /home/fcrecorder/startup.sh
        regexp: '^fcreplayloop --gcloud'
        replace: 'fcreplayloop --onetime'
      become: True
      become_user: fcrecorder
      when: lookup('env', 'FCREPLAY_PROXMOX') | bool

    - name: Unzip promtail
      unarchive:
        src: https://github.com/grafana/loki/releases/download/v2.0.0/promtail-linux-amd64.zip
        dest: /usr/local/bin
        mode: 0755
        remote_src: yes
      become: True
      when: lookup('env', 'FCREPLAY_PROMTAIL') | bool

    - name: Add promtail service
      copy:
        src: ./files/promtail.service
        dest: /usr/lib/systemd/system/promtail.service
        owner: root
        group: root
        mode: '0664'
      become: True
      when: lookup('env', 'FCREPLAY_PROMTAIL') | bool

    - name: Enable promtail service
      service:
        name: promtail
        state: stopped
        enabled: true
      become: True
      when: lookup('env', 'FCREPLAY_PROMTAIL') | bool
 
    - name: Copy promtail config
      copy:
        src: ./files/promtail.yaml
        dest: /etc/promtail.yaml
        owner: root
        group: root
        mode: 0640
      become: True
      when: lookup('env', 'FCREPLAY_PROMTAIL') | bool
    
    - name: Replace promtail url
      replace:
        path: /etc/promtail.yaml
        regexp: 'REPLACEME'
        replace: "{{ lookup('env', FCREPLAY_PROMTAIL_URL) }}"
      become: True
      when: lookup('env', 'FCREPLAY_PROMTAIL') | bool